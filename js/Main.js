// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.App = (function() {
    var TitleView, cpuSpeed, manifest, stage, tkr, totalLoaded, xSpeed, ySpeed;

    stage = null;

    manifest = null;

    cpuSpeed = 8;

    xSpeed = 10;

    ySpeed = 10;

    totalLoaded = 0;

    tkr = new Object;

    TitleView = new Container();

    console.log('hello!');

    function App() {
      this.update = __bind(this.update, this);

      this.alert = __bind(this.alert, this);

      this.reset = __bind(this.reset, this);

      this.movePaddle = __bind(this.movePaddle, this);

      this.startGame = __bind(this.startGame, this);

      this.addGameView = __bind(this.addGameView, this);

      this.tweenTitleView = __bind(this.tweenTitleView, this);

      this.addTitleView = __bind(this.addTitleView, this);

      this.handleLoadComplete = __bind(this.handleLoadComplete, this);

      this.handleFileLoad = __bind(this.handleFileLoad, this);

      this.handleComplete = __bind(this.handleComplete, this);

      this.handleProgress = __bind(this.handleProgress, this);

      this.Main = __bind(this.Main, this);
      this.stage = {};
      this.manifest = {};
      this.cpuSpeed = {};
      this.xSpeed = {};
      this.ySpeed = {};
      this.totalLoaded = {};
      this.TitleView = new Container();
      this.tkr = new Object;
      this.Main();
    }

    App.prototype.Main = function() {
      var preloader;
      this.canvas = document.getElementById('PongStage');
      this.stage = new Stage(this.canvas);
      this.stage.mouseEventsEnabled = true;
      this.manifest = [
        {
          src: "img/bg.png",
          id: "bg"
        }, {
          src: "img/main.png",
          id: "main"
        }, {
          src: "img/startB.png",
          id: "startB"
        }, {
          src: "img/paddle.png",
          id: "cpu"
        }, {
          src: "img/paddle.png",
          id: "player"
        }, {
          src: "img/ball.png",
          id: "ball"
        }, {
          src: "img/win.png",
          id: "win"
        }, {
          src: "img/lose.png",
          id: "lose"
        }
      ];
      preloader = new PreloadJS();
      preloader.onProgress = this.handleProgress;
      preloader.onComplete = this.handleComplete;
      preloader.onFileLoad = this.handleFileLoad;
      preloader.loadManifest(this.manifest);
      Ticker.setFPS(30);
      return Ticker.addListener(this.stage);
    };

    App.prototype.handleProgress = function(event) {};

    App.prototype.handleComplete = function(event) {};

    App.prototype.handleFileLoad = function(event) {
      var img;
      switch (event.type) {
        case PreloadJS.IMAGE:
          img = new Image();
          img.src = event.src;
          img.onload = this.handleLoadComplete;
          window[event.id] = new Bitmap(img);
          return this.handleLoadComplete();
      }
    };

    App.prototype.handleLoadComplete = function(event) {
      totalLoaded++;
      if (this.manifest.length === totalLoaded) {
        return this.addTitleView();
      }
    };

    App.prototype.addTitleView = function() {
      startB.x = 240 - 31.5;
      startB.y = 180;
      startB.name = 'startB';
      this.TitleView.addChild(main, startB);
      this.stage.addChild(bg, this.TitleView);
      this.stage.update();
      return startB.onPress = this.tweenTitleView;
    };

    App.prototype.tweenTitleView = function() {
      return Tween.get(this.TitleView).to({
        y: -320
      }, 300).call(this.addGameView);
    };

    App.prototype.addGameView = function() {
      this.stage.removeChild(this.TitleView);
      this.TitleView = null;
      player.x = 2;
      player.y = 160 - 37.5;
      cpu.x = 480 - 25;
      cpu.y = 160 - 37.5;
      ball.x = 240 - 15;
      ball.y = 160 - 15;
      this.playerScore = new Text('0', 'bold 20px Arial', '#A3FF24');
      this.playerScore.x = 211;
      this.playerScore.y = 20;
      this.cpuScore = new Text('0', 'bold 20px Arial', '#A3FF24');
      this.cpuScore.x = 262;
      this.cpuScore.y = 20;
      this.stage.addChild(this.playerScore, this.cpuScore, player, cpu, ball);
      this.stage.update();
      return bg.onPress = this.startGame;
    };

    App.prototype.startGame = function() {
      var isMouseDown,
        _this = this;
      bg.onPress = null;
      isMouseDown = false;
      this.stage.onMouseDown = function() {
        isMouseDown = true;
        return console.log('mouse down');
      };
      this.stage.onMouseUp = function() {
        isMouseDown = false;
        return console.log('mouse up');
      };
      this.stage.onMouseMove = function(e) {
        if (isMouseDown) {
          _this.movePaddle(e);
          return console.log('mouse drag');
        }
      };
      Ticker.addListener(tkr, false);
      tkr.tick = this.update;
      Tween.get(lose).to({
        y: -115
      }, 300);
      return Tween.get(win).to({
        y: -115
      }, 300);
    };

    App.prototype.movePaddle = function(e) {
      return player.y = e.stageY - 40;
    };

    App.prototype.reset = function() {
      ball.x = 240 - 15;
      ball.y = 160 - 15;
      player.y = 160 - 37.5;
      cpu.y = 160 - 37.5;
      this.stage.onMouseMove = null;
      Ticker.removeListener(tkr);
      return bg.onPress = this.startGame;
    };

    App.prototype.resetGame = function() {
      this.stage.removeChild(this.playerScore, this.cpuScore);
      this.playerScore = new Text('0', 'bold 20px Arial', '#A3FF24');
      this.playerScore.x = 211;
      this.playerScore.y = 20;
      this.cpuScore = new Text('0', 'bold 20px Arial', '#A3FF24');
      this.cpuScore.x = 262;
      this.cpuScore.y = 20;
      this.stage.addChild(this.playerScore, this.cpuScore);
      this.stage.update();
      return bg.onPress = this.startGame;
    };

    App.prototype.alert = function(e) {
      Ticker.removeListener(tkr);
      this.stage.onMouseMove = null;
      bg.onPress = this.resetGame();
      if (e === 'win') {
        win.x = 140;
        win.y = -90;
        this.stage.addChild(win);
        return Tween.get(win).to({
          y: 115
        }, 300);
      } else {
        lose.x = 140;
        lose.y = -90;
        this.stage.addChild(lose);
        return Tween.get(lose).to({
          y: 115
        }, 300);
      }
    };

    App.prototype.update = function() {
      ball.x = ball.x + xSpeed;
      ball.y = ball.y + ySpeed;
      if (cpu.y + 32 < ball.y - 14) {
        cpu.y = cpu.y + cpuSpeed;
      } else if (cpu.y + 32 > ball.y + 14) {
        cpu.y = cpu.y - cpuSpeed;
      }
      if (ball.y < 0) {
        ySpeed = -ySpeed;
      }
      if (ball.y + 30 > 320) {
        ySpeed = -ySpeed;
      }
      if (ball.x < 0) {
        xSpeed = -xSpeed;
        this.cpuScore.text = parseInt(this.cpuScore.text + 1);
        this.reset();
      }
      if (ball.x + 30 > 480) {
        xSpeed = -xSpeed;
        this.playerScore.text = parseInt(this.playerScore.text + 1);
        this.reset();
      }
      if (ball.x + 30 > cpu.x && ball.x + 30 < cpu.x + 22 && ball.y >= cpu.y && ball.y < cpu.y + 75) {
        xSpeed *= -1;
      }
      if (ball.x <= player.x + 22 && ball.x > player.x && ball.y >= player.y && ball.y < player.y + 75) {
        xSpeed *= -1;
      }
      if (player.y >= 249) {
        player.y = 249;
      }
      if (this.playerScore.text === 5) {
        this.alert('win');
      }
      if (this.cpuScore.text === 5) {
        return this.alert('lose');
      }
    };

    return App;

  })();

}).call(this);
