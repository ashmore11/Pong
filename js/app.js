// Generated by CoffeeScript 1.3.3
(function() {
  var app, ball, express, io, player_1, player_2, reset, start_game, timer, update, user_num, usernames, xSpeed, ySpeed;

  express = require("express");

  app = express();

  io = require("socket.io").listen(8080);

  usernames = {};

  io.set('log level', 2);

  app.get("/", function(req, res) {
    return res.sendfile(__dirname + "/index.html");
  });

  ball = {
    x: 240 - 15,
    y: 160 - 15
  };

  player_1 = {
    x: 2,
    y: 160 - 37.5
  };

  player_2 = {
    x: 480 - 25,
    y: 160 - 37.5
  };

  xSpeed = 5;

  ySpeed = 5;

  user_num = 0;

  timer = null;

  io.sockets.on("connection", function(socket) {
    socket.on("adduser", function(username) {
      socket.username = username;
      usernames[username] = username;
      io.sockets.emit("updateusers", usernames);
      user_num++;
      return io.sockets.emit("user_num", user_num);
    });
    socket.on("bg_press", function() {
      start_game();
      return io.sockets.emit("game_started");
    });
    socket.on("move_1", function(pageY) {
      return io.sockets.emit("paddle_1", pageY);
    });
    socket.on("move_2", function(pageY) {
      return io.sockets.emit("paddle_2", pageY);
    });
    socket.on("paddlemove_1", function(pageY) {
      var yCoord;
      yCoord = pageY - 40;
      player_1.y = yCoord;
      return io.sockets.emit("move_player_1", yCoord);
    });
    socket.on("paddlemove_2", function(pageY) {
      var yCoord;
      yCoord = pageY - 40;
      player_2.y = yCoord;
      return io.sockets.emit("move_player_2", yCoord);
    });
    socket.on("remove_win", function() {
      return io.sockets.emit("remove");
    });
    return socket.on("disconnect", function() {
      delete usernames[socket.username];
      return io.sockets.emit("user_disconnect");
    });
  });

  start_game = function() {
    clearInterval(timer);
    return timer = setInterval(update, 20);
  };

  reset = function() {
    ball = {
      x: 240 - 15,
      y: 160 - 15
    };
    player_1 = {
      x: 2,
      y: 160 - 37.5
    };
    player_2 = {
      x: 480 - 25,
      y: 160 - 37.5
    };
    io.sockets.emit("reset_game");
    clearInterval(timer);
    return timer = null;
  };

  update = function() {
    ball.x = ball.x + xSpeed;
    ball.y = ball.y + ySpeed;
    io.sockets.emit("ballmove", ball.x, ball.y);
    if (ball.y < 0) {
      ySpeed = -ySpeed;
    }
    if (ball.y + 30 > 320) {
      ySpeed = -ySpeed;
    }
    if (ball.x <= player_1.x + 22 && ball.x > player_1.x && ball.y >= player_1.y && ball.y < player_1.y + 75) {
      xSpeed *= -1;
    }
    if (ball.x + 30 > player_2.x && ball.x + 30 < player_2.x + 22 && ball.y >= player_2.y && ball.y < player_2.y + 75) {
      xSpeed *= -1;
    }
    if (ball.x + 30 > 480) {
      xSpeed = -xSpeed;
      io.sockets.emit("player_1_score");
      reset();
    }
    if (ball.x < 0) {
      xSpeed = -xSpeed;
      io.sockets.emit("player_2_score");
      return reset();
    }
  };

}).call(this);
